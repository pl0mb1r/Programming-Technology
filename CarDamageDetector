import cv2
import numpy as np
from tensorflow.keras.models import load_model

class CarDamageDetector:
    def __init__(self, model_path):
        self.model = load_model(model_path)

    def preprocess_image(self, image_path):
        # Implement image preprocessing logic (resize, normalization, etc.)
        # Example: use OpenCV to read and preprocess the image
        image = cv2.imread(image_path)
        image = cv2.resize(image, (224, 224))  # Adjust the size according to your model requirements
        image = image / 255.0  # Normalize pixel values

        return image.reshape(1, 224, 224, 3)

    def predict_damage(self, image_path):
        preprocessed_image = self.preprocess_image(image_path)
        prediction = self.model.predict(preprocessed_image)

        # Interpret the prediction based on your model's output
        # Example: assuming binary classification (damaged or not)
        damage_probability = prediction[0][0]
        is_damaged = damage_probability > 0.5

        return is_damaged, damage_probability
